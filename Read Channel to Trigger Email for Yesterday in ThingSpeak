% Store the channel ID for the temperature and moisture sensor channel.
channelID = 2392540;

% Provide the ThingSpeak alerts API key.
alertApiKey = 'TAK3KkXa6vzGt6bf9Fa';

% Set the address for the HTTP call
alertUrl = "https://api.thingspeak.com/alerts/send";

% webwrite uses weboptions to add required headers. 
options = weboptions("HeaderFields", ["ThingSpeak-Alerts-API-Key", alertApiKey]);

% Set the email subject.
alertSubject = "Environment alert";

% Calculate the date range for the previous day
yesterday = datetime('yesterday');
startDate = dateshift(yesterday, 'start', 'day');
endDate = dateshift(yesterday, 'end', 'day');

% Read the average temperature and moisture data for the previous day.
[data, timestamps] = thingSpeakRead(channelID, 'DateRange', [startDate, endDate], 'Fields', [1, 2]);

% Check to make sure the data was read correctly from the channel.
if isempty(data)
    alertBody = 'No data read from sensors for the previous day.';
else
    % Calculate the average temperature and moisture values for the previous day.
    avgTemperature = mean(data(:, 1)); % Assuming field 1 is temperature
    avgMoisture = mean(data(:, 2));    % Assuming field 2 is moisture

    % Set the outgoing message based on the conditions.
    if avgTemperature > 30 && avgMoisture > 400
        alertBody = 'Average temperature and moisture were too high yesterday!';
    elseif avgTemperature > 30
        alertBody = 'Average temperature was too high yesterday!';
    elseif avgMoisture > 400
        alertBody = 'Average moisture was too high yesterday!';
    else
        alertBody = 'All conditions were normal yesterday.';
    end
end

% Catch errors so the MATLAB code does not disable a TimeControl if it fails
try
    webwrite(alertUrl, "body", alertBody, "subject", alertSubject, options);
catch someException
    fprintf("Failed to send alert: %s\n", someException.message);
end
